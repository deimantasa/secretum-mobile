// Mocks generated by Mockito 5.0.10 from annotations
// in secretum/test/mocked_classes.dart.
// Do not manually edit this file.

import 'package:cloud_firestore/cloud_firestore.dart' as _i2;
import 'package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_document_change.dart'
    as _i7;
import 'package:mockito/mockito.dart' as _i1;
import 'package:secretum/models/db_backup.dart' as _i5;
import 'package:secretum/models/enums/log_type.dart' as _i4;
import 'package:secretum/models/secret.dart' as _i6;
import 'package:secretum/models/users_sensitive_information.dart' as _i8;
import 'package:secretum/services/logging_service.dart' as _i3;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeDateTime extends _i1.Fake implements DateTime {
  @override
  String toString() => super.toString();
}

class _FakeDocumentSnapshot<T extends Object?> extends _i1.Fake
    implements _i2.DocumentSnapshot<T> {}

class _FakeDocumentReference<T extends Object?> extends _i1.Fake
    implements _i2.DocumentReference<T> {}

class _FakeSnapshotMetadata extends _i1.Fake implements _i2.SnapshotMetadata {}

/// A class which mocks [LoggingService].
///
/// See the documentation for Mockito's code generation for more information.
class MockLoggingService extends _i1.Mock implements _i3.LoggingService {
  MockLoggingService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void log(String? message, {_i4.LogType? logType = _i4.LogType.debug}) => super
      .noSuchMethod(Invocation.method(#log, [message], {#logType: logType}),
          returnValueForMissingStub: null);
}

/// A class which mocks [DbBackup].
///
/// See the documentation for Mockito's code generation for more information.
class MockDbBackup extends _i1.Mock implements _i5.DbBackup {
  MockDbBackup() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i6.Secret> get secrets =>
      (super.noSuchMethod(Invocation.getter(#secrets),
          returnValue: <_i6.Secret>[]) as List<_i6.Secret>);
  @override
  DateTime get backupDate => (super.noSuchMethod(Invocation.getter(#backupDate),
      returnValue: _FakeDateTime()) as DateTime);
  @override
  Map<String, dynamic> toJson() =>
      (super.noSuchMethod(Invocation.method(#toJson, []),
          returnValue: <String, dynamic>{}) as Map<String, dynamic>);
}

/// A class which mocks [Secret].
///
/// See the documentation for Mockito's code generation for more information.
class MockSecret extends _i1.Mock implements _i6.Secret {
  MockSecret() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set addedBy(String? _addedBy) =>
      super.noSuchMethod(Invocation.setter(#addedBy, _addedBy),
          returnValueForMissingStub: null);
  @override
  set createdAt(DateTime? _createdAt) =>
      super.noSuchMethod(Invocation.setter(#createdAt, _createdAt),
          returnValueForMissingStub: null);
  @override
  set name(String? _name) => super.noSuchMethod(Invocation.setter(#name, _name),
      returnValueForMissingStub: null);
  @override
  set note(String? _note) => super.noSuchMethod(Invocation.setter(#note, _note),
      returnValueForMissingStub: null);
  @override
  set code(String? _code) => super.noSuchMethod(Invocation.setter(#code, _code),
      returnValueForMissingStub: null);
  @override
  String get id =>
      (super.noSuchMethod(Invocation.getter(#id), returnValue: '') as String);
  @override
  _i2.DocumentSnapshot<Object?> get documentSnapshot =>
      (super.noSuchMethod(Invocation.getter(#documentSnapshot),
              returnValue: _FakeDocumentSnapshot<Object?>())
          as _i2.DocumentSnapshot<Object?>);
  @override
  set documentSnapshot(_i2.DocumentSnapshot<Object?>? _documentSnapshot) =>
      super.noSuchMethod(
          Invocation.setter(#documentSnapshot, _documentSnapshot),
          returnValueForMissingStub: null);
  @override
  set documentChangeType(_i7.DocumentChangeType? _documentChangeType) => super
      .noSuchMethod(Invocation.setter(#documentChangeType, _documentChangeType),
          returnValueForMissingStub: null);
  @override
  Map<String, dynamic> toJson({bool? isEncrypted = true}) => (super
      .noSuchMethod(Invocation.method(#toJson, [], {#isEncrypted: isEncrypted}),
          returnValue: <String, dynamic>{}) as Map<String, dynamic>);
}

/// A class which mocks [DocumentSnapshot].
///
/// See the documentation for Mockito's code generation for more information.
class MockDocumentSnapshot<T extends Object?> extends _i1.Mock
    implements _i2.DocumentSnapshot<T> {
  MockDocumentSnapshot() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get id =>
      (super.noSuchMethod(Invocation.getter(#id), returnValue: '') as String);
  @override
  _i2.DocumentReference<T> get reference => (super.noSuchMethod(
      Invocation.getter(#reference),
      returnValue: _FakeDocumentReference<T>()) as _i2.DocumentReference<T>);
  @override
  _i2.SnapshotMetadata get metadata =>
      (super.noSuchMethod(Invocation.getter(#metadata),
          returnValue: _FakeSnapshotMetadata()) as _i2.SnapshotMetadata);
  @override
  bool get exists =>
      (super.noSuchMethod(Invocation.getter(#exists), returnValue: false)
          as bool);
  @override
  dynamic get(Object? field) =>
      super.noSuchMethod(Invocation.method(#get, [field]));
  @override
  dynamic operator [](Object? field) =>
      super.noSuchMethod(Invocation.method(#[], [field]));
}

/// A class which mocks [DocumentChange].
///
/// See the documentation for Mockito's code generation for more information.
class MockDocumentChange<T extends Object?> extends _i1.Mock
    implements _i2.DocumentChange<T> {
  MockDocumentChange() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.DocumentChangeType get type =>
      (super.noSuchMethod(Invocation.getter(#type),
          returnValue: _i7.DocumentChangeType.added) as _i7.DocumentChangeType);
  @override
  int get oldIndex =>
      (super.noSuchMethod(Invocation.getter(#oldIndex), returnValue: 0) as int);
  @override
  int get newIndex =>
      (super.noSuchMethod(Invocation.getter(#newIndex), returnValue: 0) as int);
  @override
  _i2.DocumentSnapshot<T> get doc =>
      (super.noSuchMethod(Invocation.getter(#doc),
          returnValue: _FakeDocumentSnapshot<T>()) as _i2.DocumentSnapshot<T>);
}

/// A class which mocks [UsersSensitiveInformation].
///
/// See the documentation for Mockito's code generation for more information.
class MockUsersSensitiveInformation extends _i1.Mock
    implements _i8.UsersSensitiveInformation {
  MockUsersSensitiveInformation() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get secretKey =>
      (super.noSuchMethod(Invocation.getter(#secretKey), returnValue: '')
          as String);
  @override
  String get primaryPassword =>
      (super.noSuchMethod(Invocation.getter(#primaryPassword), returnValue: '')
          as String);
  @override
  String get secondaryPassword => (super
          .noSuchMethod(Invocation.getter(#secondaryPassword), returnValue: '')
      as String);
  @override
  Map<String, dynamic> toJson({bool? isHashed = true}) =>
      (super.noSuchMethod(Invocation.method(#toJson, [], {#isHashed: isHashed}),
          returnValue: <String, dynamic>{}) as Map<String, dynamic>);
  @override
  Map<String, dynamic> getJson(Map<String, dynamic>? sensitiveDataMap,
          {bool? isHashed = true}) =>
      (super.noSuchMethod(
          Invocation.method(
              #getJson, [sensitiveDataMap], {#isHashed: isHashed}),
          returnValue: <String, dynamic>{}) as Map<String, dynamic>);
}
